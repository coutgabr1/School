void ShiftRight(void){
    //uint8_t B;
    //for (B=(Num_Of_LED-1);B>0;B--){
       // DMAArray[((Num_Of_LED-1)*3)] = 0; //Green
       // DMAArray[((Num_Of_LED-1)*3)+ 1] = B; //Red
       // DMAArray[((Num_Of_LED-1)*3) + 2] = 0; //Blue 
    //}
    
    uint8_t C;
    G=DMAArray[(Num_Of_LED-1)*3]; //Green   1er LED en m�moire
    R=DMAArray[(Num_Of_LED-1)*3+ 1]; //Red
    B=DMAArray[(Num_Of_LED-1)*3 + 2] ; //Blue
    for (C=(Num_Of_LED-1);C>0;C--){ //d�cale DEL vers la droite
        DMAArray[C*3] = DMAArray[(C-1)*3]; //Green
        DMAArray[C*3+ 1] = DMAArray[(C-1)*3 + 1]; //Red
        DMAArray[C*3+ 2] = DMAArray[(C-1)*3 + 2]; //Blue
    }
    DMAArray[0*3]= G; // dernier DEL= m�moire
    DMAArray[0*3+ 1]= R;
    DMAArray[0*3 + 2]= B; 
}
